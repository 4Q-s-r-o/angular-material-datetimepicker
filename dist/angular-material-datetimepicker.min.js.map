{"version":3,"sources":["angular-material-datetimepicker.js"],"names":["moduleName","VIEW_STATES","DATE","HOUR","MINUTE","css","el","name","angular","element","window","getComputedStyle","template","module","provider","this","locale","navigator","userLanguage","language","$get","setDefaultLocale","localeString","factory","mdcDatetimePickerDefaultLocale","date","time","format","minDate","maxDate","currentDate","lang","weekStart","shortTime","cancelText","okText","amText","pmText","todayText","disableDates","showReset","resetText","directive","$mdDialog","$timeout","restrict","require","scope","ngChange","showTodaysDate","link","attrs","ngModel","isOn","dateOfTheDay","undefined","moment","isString","$formatters","push","value","m","isValid","attr","on","e","preventDefault","blur","options","i","hasOwnProperty","isUndefined","locals","show","controller","PluginController","controllerAs","openFrom","parent","document","body","bindToController","disableParentScroll","hasBackDrop","skipHide","then","v","_d","isSame","$q","mdcDefaultParams","accepted_options","Object","keys","console","log","deferred","defer","copy","indexOf","clickOutsideToClose","resolve","reject","promise","$scope","currentView","_dialog","_attachedEvents","VIEWS","params","meridien","extend","init","$inject","prototype","timeMode","dateMode","initDates","start","currentNearest5Minute","minutes","Math","round","minute","that","_dateParam","input","fallback","ret","isDefined","isDate","x","getTime","_isAMomentObject","map","selectDate","initDate","initHours","initMinutes","isAfterMinDate","checkHour","checkMinute","_return","_minDate","_date","hour","second","millisecond","parseInt","isBeforeMaxDate","checkTime","_maxDate","isInDisableDates","dut","calendarStart","setName","text","possible","charAt","floor","random","length","isPM","incrementYear","amount","isNextYearVisible","add","isPreviousYearVisible","isPreviousMonthVisible","startOf","isNextMonthVisible","endOf","isHourAvailable","convertHours","isMinuteAvailable","today","Date","now","reset","hide","ok","cancel","selectMonthBefore","subtract","selectMonthAfter","selectYearBefore","selectYearAfter","selectAM","selectPM","h","okBtn","YEAR_MAX","getFullYear","MONTHS_IN_ALL","MONTHS","currentMonthIndex","low","year","month","picker","$onInit","calendar","days","toString","week","high","months","slice","getItemAtIndex","index","monthObj","generateMonthCalendar","topIndex","$watch","val2","val1","nDate","startOfMonth","iNumDay","daysInMonth","iWeek","daysTmp","slices","ceil","j","toDay","substring","isInRange","isSelectedDay","isDateOfTheDay","$compile","buildCalendarContent","tbody","querySelector","cal","tbodyHtml","forEach","weekDays","weekDay","scopeRef","html","join","idx","oldIdx","minuteMode","mode","componentRoot","exec","clock","pickerEl","w","offsetWidth","pl","replace","pr","ml","mr","clockWidth","pL","pT","mL","mT","r","points","sin","PI","y","cos","left","top","style","margin-left","margin-top","display","setCurrentValue","clockCenter","centerWidth","centerHeight","offsetHeight","_hL","_mL","height","marginTop","addClass","animateHands","rotateElement","mdg","deg","WebkitTransform","-moz-transform","-ms-transform","transform","currentValue","tmp","setDisplayPoints","setTime","val","pointAvailable","point","unWatcher","querySelectorAll"],"mappings":"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","file":"angular-material-datetimepicker.min.js","sourcesContent":["(function () {\n    'use strict';\n    var moduleName = \"ngMaterialDatePicker\";\n\n    var VIEW_STATES = {\n        DATE: 0,\n        HOUR: 1,\n        MINUTE: 2\n    };\n\n    var css = function (el, name) {\n        el = angular.element(el);\n        return ('getComputedStyle' in window) ? window.getComputedStyle(el[0])[name] : el.css(name);\n    };\n\n    var template = '<md-dialog class=\"dtp\" layout=\"column\" style=\"width: 300px;\">'\n        + '    <md-dialog-content class=\"dtp-content\">'\n        + '        <div class=\"dtp-date-view\">'\n        + '            <header class=\"dtp-header\">'\n        + '                <div class=\"dtp-actual-day\" ng-show=\"picker.dateMode\">{{picker.currentDate.format(\"dddd\")}}</div>'\n        + '                <div class=\"dtp-actual-day\" ng-show=\"picker.timeMode\">{{picker.params.shortTime ? picker.currentDate.format(\"A\") : \" \"}}</div>'\n        + '                <div class=\"dtp-close text-right\">'\n        + '                    <a href=\"#\" mdc-dtp-noclick ng-click=\"picker.hide()\">&times;</a>'\n        + '                </div>'\n        + '            </header>'\n        + '            <div class=\"dtp-date\" ng-show=\"picker.params.date\">'\n        + '                <div layout=\"column\">'\n        + '                    <div class=\"dtp-actual-month\">{{picker.currentDate.format(\"MMM\") | uppercase}}</div>'\n        + '                </div>'\n        + '                <div class=\"dtp-actual-num\">{{picker.currentDate.format(\"DD\")}}</div>'\n        + '                <div layout=\"row\">'\n        + ' <div ng-click=\"picker.incrementYear(-1)\" class=\"dtp-year-btn dtp-year-btn-prev\" flex=\"30\"><span ng-if=\"picker.isPreviousYearVisible()\" >&#x25B2;</span></div>'\n        + '                    <div class=\"dtp-actual-year\" flex>{{picker.currentDate.format(\"YYYY\")}}</div>'\n        + ' <div ng-click=\"picker.incrementYear(1)\" class=\"dtp-year-btn dtp-year-btn-next\" flex=\"30\"><span ng-if=\"picker.isNextYearVisible()\" >&#x25BC;</span></div>'\n        + '                </div>'\n        + '            </div>'//start time\n        + '            <div class=\"dtp-time\" ng-show=\"picker.params.time && !picker.params.date\">'\n        + '                <div class=\"dtp-actual-maxtime\">{{picker.currentNearest5Minute().format(picker.params.shortTime ? \"hh:mm\" : \"HH:mm\")}}</div>'\n        + '            </div>'\n        + '            <div class=\"dtp-picker\">'\n        + '                <mdc-datetime-picker-calendar date=\"picker.currentDate\" picker=\"picker\" class=\"dtp-picker-calendar\" ng-show=\"picker.currentView === picker.VIEWS.DATE\"></mdc-datetime-picker-calendar>'\n        + '                <div class=\"dtp-picker-datetime\" ng-cloak ng-if=\"picker.currentView !== picker.VIEWS.DATE\">'\n        + '                    <div class=\"dtp-actual-meridien\">'\n        + '                        <div class=\"left p20\">'\n        + '                            <a href=\"#\" mdc-dtp-noclick class=\"dtp-meridien-am\" ng-class=\"{selected: picker.meridien == \\'AM\\'}\" ng-click=\"picker.selectAM()\">{{picker.params.amText}}</a>'\n        + '                        </div>'\n        + '                        <div ng-show=\"!picker.timeMode\" class=\"dtp-actual-time p60\">{{picker.currentNearest5Minute().format(picker.params.shortTime ? \"hh:mm\" : \"HH:mm\")}}</div>'\n        + '                        <div class=\"right p20\">'\n        + '                            <a href=\"#\" mdc-dtp-noclick class=\"dtp-meridien-pm\" ng-class=\"{selected: picker.meridien == \\'PM\\'}\" ng-click=\"picker.selectPM()\">{{picker.params.pmText}}</a>'\n        + '                        </div>'\n        + '                        <div class=\"clearfix\"></div>'\n        + '                    </div>'\n        + '                    <mdc-datetime-picker-clock mode=\"hours\" ng-if=\"picker.currentView === picker.VIEWS.HOUR\"></mdc-datetime-picker-clock>'\n        + '                    <mdc-datetime-picker-clock mode=\"minutes\" ng-if=\"picker.currentView === picker.VIEWS.MINUTE\"></mdc-datetime-picker-clock>'\n        + '                </div>'\n        + '            </div>'\n        + '        </div>'\n        + '    </md-dialog-content>'\n        + '    <md-dialog-actions class=\"dtp-buttons\">'\n        + '            <md-button class=\"dtp-btn-ok md-button\" ng-click=\"picker.today()\"> {{picker.params.todayText}}</md-button>'\n        + '            <md-button class=\"dtp-btn-cancel md-button\" ng-if=\"picker.params.showReset\" ng-click=\"picker.reset()\"> {{picker.params.resetText}}</md-button>'\n        + '            <md-button class=\"dtp-btn-cancel md-button\" ng-click=\"picker.cancel()\"> {{picker.params.cancelText}}</md-button>'\n        + '            <md-button class=\"dtp-btn-ok md-button\" ng-click=\"picker.ok()\"> {{picker.params.okText}}</md-button>'\n        + '      </md-dialog-actions>'\n        + '</md-dialog>';\n\n\n    angular.module(moduleName, ['ngMaterial'])\n        .provider('mdcDatetimePickerDefaultLocale', function () {\n            this.locale = window.navigator.userLanguage || window.navigator.language || 'en';\n\n            this.$get = function () {\n                return this;\n            };\n\n            this.setDefaultLocale = function (localeString) {\n                this.locale = localeString;\n            };\n        })\n        .factory('mdcDefaultParams', ['mdcDatetimePickerDefaultLocale', function (mdcDatetimePickerDefaultLocale) {\n            var default_params = {\n                date: true,\n                time: true,\n                format: 'YYYY-MM-DD',\n                minDate: null,\n                maxDate: null,\n                currentDate: null,\n                lang: mdcDatetimePickerDefaultLocale.locale,\n                weekStart: 0,\n                shortTime: false,\n                cancelText: 'Cancel',\n                okText: 'OK',\n                amText: 'AM',\n                pmText: 'PM',\n                todayText: 'Today',\n                disableDates: [],\n                showReset: true,\n                resetText: 'Reset'\n            };\n            return default_params;\n        }])\n        .directive('mdcDatetimePicker', ['$mdDialog', '$timeout',\n            function ($mdDialog, $timeout) {\n\n                return {\n                    restrict: 'A',\n                    require: 'ngModel',\n                    scope: {\n                        currentDate: '=ngModel',\n                        ngChange: '&',\n                        time: '=',\n                        date: '=',\n                        minDate: '=',\n                        maxDate: '=',\n                        disableDates: '=',\n                        shortTime: '=',\n                        weekStart: '=',\n                        format: '@',\n                        cancelText: '@',\n                        okText: '@',\n                        lang: '@',\n                        amText: '@',\n                        pmText: '@',\n                        showTodaysDate: '@',\n                        todayText: '@',\n                        resetText: '@',\n                        showReset: '@'\n                    },\n                    link: function (scope, element, attrs, ngModel) {\n                        var isOn = false;\n                        if (!scope.format) {\n                            if (scope.date && scope.time) {\n                                scope.format = 'YYYY-MM-DD HH:mm';\n                            } else if (scope.date) {\n                                scope.format = 'YYYY-MM-DD';\n                            } else {\n                                scope.format = 'HH:mm';\n                            }\n                        }\n\n                        var dateOfTheDay = null;\n                        if (scope.showTodaysDate !== undefined && scope.showTodaysDate !== \"false\") {\n                            dateOfTheDay = moment();\n                        }\n\n                        if (angular.isString(scope.currentDate) && scope.currentDate !== '') {\n                            scope.currentDate = moment(scope.currentDate, scope.format);\n                        }\n\n                        if (ngModel) {\n                            ngModel.$formatters.push(function (value) {\n                                if (typeof value === 'undefined') {\n                                    return;\n                                }\n                                var m = moment(value);\n                                return m.isValid() ? m.format(scope.format) : '';\n                            });\n                        }\n\n                        element.attr('readonly', '');\n                        //@TODO custom event to trigger input\n                        element.on('focus', function (e) {\n                            e.preventDefault();\n                            element.blur();\n                            if (isOn) {\n                                return;\n                            }\n                            isOn = true;\n                            var options = {};\n                            for (var i in attrs) {\n                                if (scope.hasOwnProperty(i) && !angular.isUndefined(scope[i])) {\n                                    options[i] = scope[i];\n                                }\n                            }\n                            options.currentDate = scope.currentDate;\n                            options.showTodaysDate = dateOfTheDay;\n\n                            var locals = {options: options};\n                            $mdDialog.show({\n                                template: template,\n                                controller: PluginController,\n                                controllerAs: 'picker',\n                                locals: locals,\n                                openFrom: element,\n                                parent: angular.element(document.body),\n                                bindToController: true,\n                                disableParentScroll: false,\n                                hasBackDrop: false,\n                                skipHide: true\n                            })\n                                .then(function (v) {\n                                    scope.currentDate = v ? v._d : v;\n                                    isOn = false;\n\n                                    if (!moment(scope.currentDate).isSame(options.currentDate)) {\n                                        $timeout(scope.ngChange, 0);\n                                    }\n\n                                    element.blur()\n\n                                }, function () {\n                                    isOn = false;\n                                    element.blur()\n                                })\n                            ;\n                        });\n                    }\n                };\n            }])\n        /** Returns a service that opens a dialog when the attribute shown is called\n         The dialog serves to select a date/time/etc. depending on the options given to the function show\n\n         @param options extends mdcDefaultParams\n         {\n       date: {boolean} =true,\n         time: {boolean] =true,\n         format: {string} ='YYYY-MM-DD',\n         minDate: {strign} =null,\n         maxDate: {string} =null,\n         currentDate: {string} =null,\n         lang: {string} =mdcDatetimePickerDefaultLocale,\n         weekStart: {int} =0,\n         shortTime: {boolean} =false,\n         cancelText: {string} ='Cancel',\n         todayText: {string} ='Today',\n         okText: {string} ='OK',\n         amText: {string} ='AM',\n         pmText: {string} ='PM'\n     }\n   @return promise\n         */\n        .factory('mdcDateTimeDialog', [\"$mdDialog\", \"$q\", \"mdcDefaultParams\", function ($mdDialog, $q, mdcDefaultParams) {\n            var accepted_options = Object.keys(mdcDefaultParams);\n            console.log(accepted_options);\n            var service = {\n                show: function (options) {\n                    var deferred = $q.defer();\n                    var params = angular.copy(mdcDefaultParams);\n                    for (var i in options) {\n                        if (accepted_options.indexOf[i] != -1 && options.hasOwnProperty(i)) {\n                            params = options[i];\n                        }\n                    }\n                    var locals = {options: options};\n                    $mdDialog.show({\n                        template: template,\n                        controller: PluginController,\n                        controllerAs: 'picker',\n                        locals: locals,\n                        parent: angular.element(document.body),\n                        bindToController: true,\n                        clickOutsideToClose: true,\n                        disableParentScroll: false,\n                        skipHide: true\n                    })\n                        .then(function (v) {\n                            var currentDate = v ? v._d : v;\n                            deferred.resolve(v ? v._d : v);\n                        }, function () {\n                            deferred.reject();\n                        });\n                    return deferred.promise;\n                }\n            };\n\n            return service;\n        }])\n    ;\n\n    var PluginController = function ($scope, $mdDialog, mdcDefaultParams) {\n        this.currentView = VIEW_STATES.DATE;\n        this._dialog = $mdDialog;\n\n        this._attachedEvents = [];\n        this.VIEWS = VIEW_STATES;\n        this.params = mdcDefaultParams;\n        this.meridien = 'AM';\n        this.params = angular.extend(this.params, this.options);\n\n        this.init();\n    };\n\n    PluginController.$inject = ['$scope', '$mdDialog', 'mdcDefaultParams'];\n    PluginController.prototype = {\n        init: function () {\n            this.timeMode = this.params.time && !this.params.date;\n            this.dateMode = this.params.date;\n            this.initDates();\n            this.start();\n        },\n        currentNearest5Minute: function () {\n            var date = this.currentDate || moment();\n            var minutes = (5 * Math.round(date.minute() / 5));\n            if (minutes >= 60) {\n                minutes = 55; //always push down\n            }\n            return moment(date).minutes(minutes);\n        },\n        initDates: function () {\n            var that = this;\n            var _dateParam = function (input, fallback) {\n                var ret = null;\n                if (angular.isDefined(input) && input !== null && input !== '') {\n                    if (angular.isString(input)) {\n                        if (typeof(that.params.format) !== 'undefined' && that.params.format !== null) {\n                            ret = moment(input, that.params.format).locale(that.params.lang);\n                        }\n                        else {\n                            ret = moment(input).locale(that.params.lang);\n                        }\n                    } else if (typeof input === 'number') {\n                        ret = moment(input).locale(that.params.lang);\n                    } else {\n                        if (angular.isDate(input)) {\n                            var x = input.getTime();\n                            ret = moment(x, \"x\").locale(that.params.lang);\n                        } else if (input._isAMomentObject) {\n                            ret = input;\n                        }\n                    }\n                }\n                else {\n                    ret = fallback;\n                }\n                return ret;\n            };\n\n            this.currentDate = _dateParam(this.params.currentDate, moment());\n            this.minDate = _dateParam(this.params.minDate);\n            this.maxDate = _dateParam(this.params.maxDate);\n            this.disableDates = this.params.disableDates.map(function (x) {\n                return moment(x).format('MMMM Do YYYY')\n            });\n            this.selectDate(this.currentDate);\n        },\n        initDate: function () {\n            this.currentView = VIEW_STATES.DATE;\n        },\n        initHours: function () {\n            this.currentView = VIEW_STATES.HOUR;\n        },\n        initMinutes: function () {\n            this.currentView = VIEW_STATES.MINUTE;\n        },\n        isAfterMinDate: function (date, checkHour, checkMinute) {\n            var _return = true;\n\n            if (typeof(this.minDate) !== 'undefined' && this.minDate !== null) {\n                var _minDate = moment(this.minDate);\n                var _date = moment(date);\n\n                if (!checkHour && !checkMinute) {\n                    _minDate.hour(0);\n                    _minDate.minute(0);\n\n                    _date.hour(0);\n                    _date.minute(0);\n                }\n\n                _minDate.second(0);\n                _date.second(0);\n                _minDate.millisecond(0);\n                _date.millisecond(0);\n\n                if (!checkMinute) {\n                    _date.minute(0);\n                    _minDate.minute(0);\n\n                    _return = (parseInt(_date.format(\"X\")) >= parseInt(_minDate.format(\"X\")));\n                }\n                else {\n                    _return = (parseInt(_date.format(\"X\")) >= parseInt(_minDate.format(\"X\")));\n                }\n            }\n\n            return _return;\n        },\n        isBeforeMaxDate: function (date, checkTime, checkMinute) {\n            var _return = true;\n\n            if (typeof(this.maxDate) !== 'undefined' && this.maxDate !== null) {\n                var _maxDate = moment(this.maxDate);\n                var _date = moment(date);\n\n                if (!checkTime && !checkMinute) {\n                    _maxDate.hour(0);\n                    _maxDate.minute(0);\n\n                    _date.hour(0);\n                    _date.minute(0);\n                }\n\n                _maxDate.second(0);\n                _date.second(0);\n                _maxDate.millisecond(0);\n                _date.millisecond(0);\n\n                if (!checkMinute) {\n                    _date.minute(0);\n                    _maxDate.minute(0);\n\n                    _return = (parseInt(_date.format(\"X\")) <= parseInt(_maxDate.format(\"X\")));\n                }\n                else {\n                    _return = (parseInt(_date.format(\"X\")) <= parseInt(_maxDate.format(\"X\")));\n                }\n            }\n\n            return _return;\n        },\n        isInDisableDates: function (date) {\n            var dut = date.format('MMMM Do YYYY')\n            if (this.disableDates.indexOf(dut) > -1) {\n                return false;\n            }\n            return true;\n        },\n        selectDate: function (date) {\n            if (date) {\n                this.currentDate = moment(date);\n                if (!this.isAfterMinDate(this.currentDate)) {\n                    this.currentDate = moment(this.minDate);\n                }\n\n                if (!this.isBeforeMaxDate(this.currentDate)) {\n                    this.currentDate = moment(this.maxDate);\n                }\n                this.currentDate.locale(this.params.lang);\n                this.calendarStart = moment(this.currentDate);\n                this.meridien = this.currentDate.hour() >= 12 ? 'PM' : 'AM';\n            } else {\n                this.currentDate = null;\n            }\n        },\n        setName: function () {\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n            for (var i = 0; i < 5; i++) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n\n            return text;\n        },\n        isPM: function () {\n            return this.meridien === 'PM';\n        },\n        incrementYear: function (amount) {\n            if (amount === 1 && this.isNextYearVisible()) {\n                this.selectDate(this.currentDate.add(amount, 'year'));\n            }\n\n            if (amount === -1 && this.isPreviousYearVisible()) {\n                this.selectDate(this.currentDate.add(amount, 'year'));\n            }\n        },\n        isPreviousMonthVisible: function () {\n            return this.calendarStart && this.isAfterMinDate(moment(this.calendarStart).startOf('month'), false, false);\n        },\n        isNextMonthVisible: function () {\n            return this.calendarStart && this.isBeforeMaxDate(moment(this.calendarStart).endOf('month'), false, false);\n        },\n        isPreviousYearVisible: function () {\n            return this.calendarStart && this.isAfterMinDate(moment(this.calendarStart).startOf('year'), false, false);\n        },\n        isNextYearVisible: function () {\n            return this.calendarStart && this.isBeforeMaxDate(moment(this.calendarStart).endOf('year'), false, false);\n        },\n        isHourAvailable: function (hour) {\n            var _date = moment(this.currentDate);\n            _date.hour(this.convertHours(hour)).minute(0).second(0);\n            return this.isAfterMinDate(_date, true, false) && this.isBeforeMaxDate(_date, true, false);\n        },\n        isMinuteAvailable: function (minute) {\n            var _date = moment(this.currentDate);\n            _date.minute(minute).second(0);\n            return this.isAfterMinDate(_date, true, true) && this.isBeforeMaxDate(_date, true, true);\n        },\n        start: function () {\n            this.currentView = VIEW_STATES.DATE;\n            //this.initDates();\n            if (this.params.date) {\n                this.initDate();\n            } else {\n                if (this.params.time) {\n                    this.initHours();\n                }\n            }\n        },\n        today: function () {\n            this.selectDate(Date.now());\n        },\n        reset: function () {\n            this._dialog.hide(null);\n        },\n        ok: function () {\n            switch (this.currentView) {\n                case VIEW_STATES.DATE:\n                    if (this.params.time === true) {\n                        this.initHours();\n                    }\n                    else {\n                        this.hide(true);\n                    }\n                    break;\n                case VIEW_STATES.HOUR:\n                    this.initMinutes();\n                    break;\n                case VIEW_STATES.MINUTE:\n                    this.hide(true);\n                    break;\n            }\n        },\n        cancel: function () {\n            if (this.params.time) {\n                switch (this.currentView) {\n                    case VIEW_STATES.DATE:\n                        this.hide();\n                        break;\n                    case VIEW_STATES.HOUR:\n                        if (this.params.date) {\n                            this.initDate();\n                        }\n                        else {\n                            this.hide();\n                        }\n                        break;\n                    case VIEW_STATES.MINUTE:\n                        this.initHours();\n                        break;\n                }\n            }\n            else {\n                this.hide();\n            }\n        },\n        selectMonthBefore: function () {\n            this.calendarStart.subtract(1, 'months');\n        },\n        selectMonthAfter: function () {\n            this.calendarStart.add(1, 'months');\n        },\n        selectYearBefore: function () {\n            this.calendarStart.subtract(1, 'years');\n        },\n        selectYearAfter: function () {\n            this.calendarStart.add(1, 'years');\n        },\n        selectAM: function () {\n            if (this.isHourAvailable(0) || this.isHourAvailable(12)) {\n                if (this.currentDate.hour() >= 12) {\n                    this.selectDate(this.currentDate.subtract(12, 'hours'));\n                }\n                if (!this.isHourAvailable(this.currentDate.hour())) {\n                    this.selectDate(this.currentDate.hour(this.minDate.hour()));\n                }\n                if (!this.isMinuteAvailable(this.currentDate.minute())) {\n                    this.selectDate(this.currentDate.minute(this.minDate.minute()));\n                }\n            }\n        },\n        selectPM: function () {\n            if (this.isHourAvailable(13) || this.isHourAvailable(24)) {\n                if (this.currentDate.hour() < 12) {\n                    this.selectDate(this.currentDate.add(12, 'hours'));\n                }\n                if (!this.isHourAvailable(this.currentDate.hour())) {\n                    this.selectDate(this.currentDate.hour(this.maxDate.hour()));\n                }\n                if (!this.isMinuteAvailable(this.currentDate.minute())) {\n                    this.selectDate(this.currentDate.minute(this.maxDate.minute()));\n                }\n            }\n        },\n        convertHours: function (h) {\n            var _return = h;\n            if ((h < 12) && this.isPM())\n                _return += 12;\n\n            return _return;\n        },\n        hide: function (okBtn) {\n            if (okBtn) {\n                this._dialog.hide(this.currentDate);\n            } else {\n                this._dialog.cancel();\n            }\n        }\n    };\n\n\n    angular.module(moduleName)\n        .directive('mdcDatetimePickerCalendar', [\n            function () {\n\n                var YEAR_MIN = 1920,\n                    YEAR_MAX = new Date().getFullYear() + 30,\n                    MONTHS_IN_ALL = (YEAR_MAX - YEAR_MIN + 1) * 12,\n                    ITEM_HEIGHT = 240,\n                    MONTHS = [];\n                for (var i = 0; i < MONTHS_IN_ALL; i++) {\n                    MONTHS.push(i);\n                }\n\n                var currentMonthIndex = function (date, low) {\n                    low = low ? low : 0;\n                    var year = date.year();\n                    var month = date.month();\n                    return (((year - YEAR_MIN) * 12) + month - 1) - low;\n                };\n\n                return {\n                    restrict: 'E',\n                    scope: {\n                        picker: '=',\n                        date: '='\n                    },\n                    bindToController: true,\n                    controllerAs: 'cal',\n                    controller: ['$scope', function ($scope) {\n                        this.$onInit = function () {\n                            var calendar = this,\n                                picker = this.picker,\n                                days = [];\n\n                            for (var i = picker.params.weekStart; days.length < 7; i++) {\n                                if (i > 6) {\n                                    i = 0;\n                                }\n                                days.push(i.toString());\n                            }\n\n                            calendar.week = days;\n                            if (!picker.maxDate && !picker.minDate) {\n                                calendar.months = MONTHS;\n                            } else {\n                                var low = picker.minDate ? currentMonthIndex(picker.minDate) : 0;\n                                var high = picker.maxDate ? (currentMonthIndex(picker.maxDate) + 1) : MONTHS_IN_ALL;\n                                calendar.months = MONTHS.slice(low, high);\n                            }\n\n\n                            calendar.getItemAtIndex = function (index) {\n                                var month = ((index + 1) % 12) || 12;\n                                var year = YEAR_MIN + Math.floor(index / 12);\n                                var monthObj = moment(picker.currentDate)\n                                    .year(year)\n                                    .month(month);\n                                return generateMonthCalendar(monthObj);\n                            };\n\n                            calendar.topIndex = currentMonthIndex(picker.currentDate) - calendar.months[0];\n\n                            $scope.$watch(function () {\n                                return picker.currentDate ? picker.currentDate.format('YYYY-MM') : '';\n                            }, function (val2, val1) {\n                                if (val2 != val1) {\n                                    var nDate = moment(val2, 'YYYY-MM');\n                                    var low = picker.minDate ? currentMonthIndex(picker.minDate) : 0;\n                                    var index = currentMonthIndex(nDate, low);\n                                    if (calendar.topIndex != index) {\n                                        calendar.topIndex = index;\n                                    }\n                                }\n                            });\n\n                            var generateMonthCalendar = function (date) {\n                                var month = {};\n                                if (date !== null) {\n                                    month.name = date.format('MMMM YYYY');\n                                    var startOfMonth = moment(date).locale(picker.params.lang).startOf('month')\n                                        .hour(date.hour())\n                                        .minute(date.minute())\n                                    ;\n                                    var iNumDay = startOfMonth.format('d');\n                                    month.days = [];\n                                    for (var i = startOfMonth.date(); i <= startOfMonth.daysInMonth(); i++) {\n                                        if (i === startOfMonth.date()) {\n                                            var iWeek = calendar.week.indexOf(iNumDay.toString());\n                                            if (iWeek > 0) {\n                                                for (var x = 0; x < iWeek; x++) {\n                                                    month.days.push(0);\n                                                }\n                                            }\n                                        }\n                                        month.days.push(moment(startOfMonth).locale(picker.params.lang).date(i));\n                                    }\n\n                                    var daysInAWeek = 7, daysTmp = [],\n                                        slices = Math.ceil(month.days.length / daysInAWeek);\n                                    for (var j = 0; j < slices; j++) {\n                                        daysTmp.push(month.days.slice(j * daysInAWeek, (j + 1) * daysInAWeek));\n                                    }\n                                    month.days = daysTmp;\n                                    return month;\n                                }\n\n                            };\n\n                            calendar.toDay = function (i) {\n                                return moment(parseInt(i), \"d\")\n                                    .locale(picker.params.lang)\n                                    .format(\"dd\")\n                                    .substring(0, 1);\n                            };\n\n                            calendar.isInRange = function (date) {\n                                return picker.isAfterMinDate(moment(date), false, false)\n                                    && picker.isBeforeMaxDate(moment(date), false, false)\n                                    && picker.isInDisableDates(moment(date));\n                            };\n\n                            calendar.selectDate = function (date) {\n                                if (date) {\n                                    if (calendar.isSelectedDay(date)) {\n                                        return picker.ok();\n                                    }\n                                    picker.selectDate(moment(date).hour(calendar.date.hour()).minute(calendar.date.minute()));\n                                }\n                            };\n\n                            calendar.isSelectedDay = function (m) {\n                                return m && calendar.date.date() === m.date() && calendar.date.month() === m.month() && calendar.date.year() === m.year();\n                            };\n\n                            calendar.isDateOfTheDay = function (m) {\n                                var today = calendar.picker.options.showTodaysDate;\n                                if (!today) {\n                                    return false;\n                                }\n\n                                return m && today.date() === m.date() && today.month() === m.month() && today.year() === m.year();\n                            }\n                        }\n                    }],\n                    template: '<md-virtual-repeat-container md-top-index=\"cal.topIndex\" class=\"months\">' +\n                        '<div md-virtual-repeat=\"idx in ::cal.months\" md-auto-shrink md-item-size=\"' + ITEM_HEIGHT + '\">' +\n                        '     <div mdc-datetime-picker-calendar-month idx=\"idx\"></div>' +\n                        '</div>' +\n                        '</md-virtual-repeat-container>'\n                };\n            }])\n        .directive('mdcDatetimePickerCalendarMonth', ['$compile',\n            function ($compile) {\n                var buildCalendarContent = function (element, scope) {\n                    var tbody = angular.element(element[0].querySelector('tbody'));\n                    var calendar = scope.cal, month = scope.month;\n\n                    var tbodyHtml = [];\n\n                    month.days.forEach(function (weekDays, i) {\n                        tbodyHtml.push('<tr>');\n                        weekDays.forEach(function (weekDay, j) {\n                            tbodyHtml.push('<td>');\n                            if (weekDay) {\n                                if (calendar.isInRange(weekDay)) {\n                                    //build a\n                                    var scopeRef = 'month[\\'days\\'][' + i + '][' + j + ']';\n\n                                    tbodyHtml.push('<a href=\"#\" mdc-dtp-noclick class=\"dtp-select-day\" ng-class=\"{selected: cal.isSelectedDay(' + scopeRef + '), hilite: cal.isDateOfTheDay(' + scopeRef + ')}\" ng-click=\"cal.selectDate(' + scopeRef + ')\">');\n                                    tbodyHtml.push(weekDay.format('D'));\n                                    tbodyHtml.push('</a>');\n                                } else {\n                                    tbodyHtml.push('<span class=\"dtp-select-day\">');\n                                    tbodyHtml.push(weekDay.format('D'));\n                                    tbodyHtml.push('</span>');\n                                }\n                            }\n                            tbodyHtml.push('</td>');\n                        });\n                        tbodyHtml.push('</tr>');\n                    });\n\n                    tbody.html(tbodyHtml.join(''));\n                    $compile(tbody)(scope);\n                };\n\n                return {\n                    scope: {\n                        idx: '='\n                    },\n                    require: '^mdcDatetimePickerCalendar',\n                    restrict: 'AE',\n                    template: '<div class=\"dtp-picker-month\">{{month.name}}</div>'\n                        + '<table class=\"table dtp-picker-days\">'\n                        + '    <thead>'\n                        + '    <tr>'\n                        + '        <th ng-repeat=\"day in cal.week track by $index\">{{cal.toDay(day)}}</th>'\n                        + '    </tr>'\n                        + '    </thead>'\n                        + '    <tbody>'\n                        + '    </tbody>'\n                        + '</table>',\n                    link: function (scope, element, attrs, calendar) {\n                        scope.cal = calendar;\n                        scope.month = calendar.getItemAtIndex(parseInt(scope.idx));\n                        buildCalendarContent(element, scope);\n                        scope.$watch(function () {\n                            return scope.idx;\n                        }, function (idx, oldIdx) {\n                            if (idx != oldIdx) {\n                                scope.month = calendar.getItemAtIndex(parseInt(scope.idx));\n                                buildCalendarContent(element, scope);\n                            }\n                        });\n                    }\n                };\n            }\n        ])\n    ;\n\n    angular.module(moduleName)\n        .directive('mdcDtpNoclick', function () {\n            return {\n                link: function (scope, el) {\n                    el.on('click', function (e) {\n                        e.preventDefault();\n                    });\n                }\n            };\n        });\n    angular.module(moduleName)\n        .directive('mdcDatetimePickerClock', [\n            function () {\n\n                var template = '<div class=\"dtp-picker-clock\"><span ng-if=\"!points || points.length < 1\">&nbsp;</span>'\n                    + '<div ng-repeat=\"point in points\" class=\"dtp-picker-time\" ng-style=\"point.style\">'\n                    + '   <a href=\"#\" mdc-dtp-noclick ng-class=\"{selected: point.value===currentValue}\" class=\"dtp-select-hour\" ng-click=\"setTime(point.value)\" ng-if=\"pointAvailable(point)\">{{point.display}}</a>'\n                    + '   <a href=\"#\" mdc-dtp-noclick class=\"disabled dtp-select-hour\" ng-if=\"!pointAvailable(point)\">{{point.display}}</a>'\n                    + '</div>'\n                    + '<div class=\"dtp-hand dtp-hour-hand\"></div>'\n                    + '<div class=\"dtp-hand dtp-minute-hand\"></div>'\n                    + '<div class=\"dtp-clock-center\"></div>'\n                    + '</div>';\n\n                return {\n                    restrict: 'E',\n                    template: template,\n                    link: function (scope, element, attrs) {\n                        var minuteMode = attrs.mode === 'minutes';\n                        var picker = scope.picker;\n                        //banking on the fact that there will only be one at a time\n                        var componentRoot = document.querySelector('md-dialog.dtp');\n                        var exec = function () {\n                            var clock = angular.element(element[0].querySelector('.dtp-picker-clock')),\n                                pickerEl = angular.element(componentRoot.querySelector('.dtp-picker'));\n\n                            var w = componentRoot.querySelector('.dtp-content').offsetWidth;\n                            var pl = parseInt(css(pickerEl, 'paddingLeft').replace('px', '')) || 0;\n                            var pr = parseInt(css(pickerEl, 'paddingRight').replace('px', '')) || 0;\n                            var ml = parseInt(css(clock, 'marginLeft').replace('px', '')) || 0;\n                            var mr = parseInt(css(clock, 'marginRight').replace('px', '')) || 0;\n                            //set width\n                            var clockWidth = (w - (ml + mr + pl + pr));\n                            clock.css('width', (clockWidth) + 'px');\n\n                            var pL = parseInt(css(pickerEl, 'paddingLeft').replace('px', '')) || 0;\n                            var pT = parseInt(css(pickerEl, 'paddingTop').replace('px', '')) || 0;\n                            var mL = parseInt(css(clock, 'marginLeft').replace('px', '')) || 0;\n                            var mT = parseInt(css(clock, 'marginTop').replace('px', '')) || 0;\n\n                            var r = (clockWidth / 2);\n                            var j = r / 1.2; //???\n\n                            var points = [];\n\n                            for (var h = 0; h < 12; ++h) {\n                                var x = j * Math.sin(Math.PI * 2 * (h / 12));\n                                var y = j * Math.cos(Math.PI * 2 * (h / 12));\n                                var left = (r + x + pL / 2) - (pL + mL);\n                                var top = (r - y - mT / 2) - (pT + mT);\n\n                                var hour = {\n                                    left: left,\n                                    top: top,\n                                    value: (minuteMode ? (h * 5) : h), //5 for minute 60/12\n                                    style: {'margin-left': left + 'px', 'margin-top': top + 'px'}\n                                };\n\n                                if (minuteMode) {\n                                    hour.display = hour.value < 10 ? ('0' + hour.value) : hour.value;\n                                } else {\n\n                                    if (picker.params.shortTime) {\n                                        hour.display = (h === 0) ? 12 : h;\n                                    } else {\n                                        hour.display = picker.isPM() ? h + 12 : h;\n                                    }\n                                }\n\n\n                                points.push(hour);\n                            }\n\n                            scope.points = points;\n                            setCurrentValue();\n                            clock.css('height', clockWidth + 'px');\n                            //picker.initHands(true);\n\n                            var clockCenter = element[0].querySelector('.dtp-clock-center');\n                            var centerWidth = (clockCenter.offsetWidth / 2) || 7.5,\n                                centerHeight = (clockCenter.offsetHeight / 2) || 7.5;\n                            var _hL = r / 1.8;\n                            var _mL = r / 1.5;\n\n                            angular.element(element[0].querySelector('.dtp-hour-hand')).css({\n                                left: r + (mL * 1.5) + 'px',\n                                height: _hL + 'px',\n                                marginTop: (r - _hL - pL) + 'px'\n                            }).addClass(!minuteMode ? 'on' : '');\n\n                            angular.element(element[0].querySelector('.dtp-minute-hand')).css\n                            ({\n                                left: r + (mL * 1.5) + 'px',\n                                height: _mL + 'px',\n                                marginTop: (r - _mL - pL) + 'px'\n                            }).addClass(minuteMode ? 'on' : '');\n\n                            angular.element(clockCenter).css({\n                                left: (r + pL + mL - centerWidth) + 'px',\n                                marginTop: (r - (mL / 2)) - centerHeight + 'px'\n                            });\n                            animateHands();\n                        };\n\n                        var animateHands = function () {\n                            var _date = picker.currentNearest5Minute();\n                            var h = _date.hour();\n                            var m = _date.minute();\n\n                            rotateElement(angular.element(element[0].querySelector('.dtp-hour-hand')), (360 / 12) * h);\n                            var mdg = ((360 / 60) * (5 * Math.round(m / 5)));\n                            rotateElement(angular.element(element[0].querySelector('.dtp-minute-hand')), mdg);\n                        };\n\n                        var rotateElement = function (el, deg) {\n                            angular.element(el).css({\n                                WebkitTransform: 'rotate(' + deg + 'deg)',\n                                '-moz-transform': 'rotate(' + deg + 'deg)',\n                                '-ms-transform': 'rotate(' + deg + 'deg)',\n                                'transform': 'rotate(' + deg + 'deg)'\n                            });\n                        };\n\n\n                        var setCurrentValue = function () {\n                            var date = picker.currentNearest5Minute();\n                            scope.currentValue = minuteMode ? date.minute() : (date.hour() % 12);\n                        };\n\n                        scope.$watch(function () {\n                            var tmp = picker.currentNearest5Minute();\n                            return tmp ? tmp.format('HH:mm') : '';\n                        }, function () {\n                            setCurrentValue();\n                            animateHands();\n                        });\n\n\n                        var setDisplayPoints = function (isPM, points) {\n                            for (var i = 0; i < points.length; i++) {\n                                points[i].display = i;\n                                if (isPM) {\n                                    points[i].display += 12;\n                                }\n                            }\n                            return points;\n                        };\n\n                        if (!picker.params.shortTime) {\n                            scope.$watch('picker.meridien', function () {\n                                if (!minuteMode) {\n                                    if (scope.points) {\n                                        var points = setDisplayPoints(picker.isPM(), angular.copy(scope.points));\n                                        scope.points = points;\n                                    }\n                                }\n                            });\n                        }\n\n\n                        scope.setTime = function (val) {\n                            if (val === scope.currentValue) {\n                                picker.ok();\n                            }\n\n                            if (!minuteMode) {\n                                picker.currentDate.hour(picker.isPM() ? (val + 12) : val);\n                            } else {\n                                picker.currentDate.minute(val);\n                            }\n                            picker.currentDate.second(0)\n                        };\n\n                        scope.pointAvailable = function (point) {\n                            return minuteMode ? picker.isMinuteAvailable(point.value) : picker.isHourAvailable(point.value);\n                        };\n\n                        var unWatcher = scope.$watch(function () {\n                            return element[0].querySelectorAll('div').length;\n                        }, function () {\n                            exec();\n                            unWatcher();\n                        });\n                    }\n                }\n            }]);\n\n})();\n"]}